name: Deploy to Vercel with Label-based API and Subdomain

on:
  pull_request:
    types: [labeled, opened, synchronize, reopened]

permissions:
  contents: read
  pull-requests: write

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Get PR Labels
        id: labels
        uses: actions/github-script@v7
        with:
          script: |
            const labels = await github.rest.issues.listLabelsOnIssue({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number
            });
            const label = labels.data.find(l => l.name.startsWith("label:"));
            if (label) {
              core.setOutput("env", label.name.replace("label:", ""));
            } else {
              core.setFailed("No label:env found");
            }

      - name: Set dynamic ENV and DOMAIN
        id: setenv
        run: |
          case "${{ steps.labels.outputs.env }}" in
            dev)
              echo "API_URL=https://dev.api.interview.kir93.co.kr" >> $GITHUB_ENV
              echo "DOMAIN=dev.interview.kir93.co.kr" >> $GITHUB_ENV
              ;;
            stage)
              echo "API_URL=https://stage.api.interview.kir93.co.kr" >> $GITHUB_ENV
              echo "DOMAIN=stage.interview.kir93.co.kr" >> $GITHUB_ENV
              ;;
            test)
              echo "API_URL=https://test.api.interview.kir93.co.kr" >> $GITHUB_ENV
              echo "DOMAIN=test.interview.kir93.co.kr" >> $GITHUB_ENV
              ;;
            *)
              echo "Unknown environment label"; exit 1
              ;;
          esac

      - name: Deploy to Vercel with Subdomain
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: >
            --build-env NEXT_PUBLIC_API_URL=${{ env.API_URL }}
            --env NEXT_PUBLIC_API_URL=${{ env.API_URL }}
            --confirm
          github-token: ${{ secrets.GITHUB_TOKEN }}
          alias-domains: ${{ env.DOMAIN }}
          github-comment: false
